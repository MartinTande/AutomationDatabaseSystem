DROP TABLE IF EXISTS OBJECT;
DROP TABLE IF EXISTS TAG;
DROP TABLE IF EXISTS HIERARCHY_2;
DROP TABLE IF EXISTS HIERARCHY_1;
DROP TABLE IF EXISTS VDU_GROUP; --EAS group = VDU group
DROP TABLE IF EXISTS ALARM_GROUP; -- alarm groups
DROP TABLE IF EXISTS OTD;
DROP TABLE IF EXISTS ACKNOWLEDGE_ALLOWED;
DROP TABLE IF EXISTS ALWAYS_VISIBLE;
DROP TABLE IF EXISTS NODE;
DROP TABLE IF EXISTS LOCATION;
DROP TABLE IF EXISTS CABINET;
DROP TABLE IF EXISTS DATA_BLOCK;


CREATE TABLE HIERARCHY_1
(
	Id int PRIMARY KEY IDENTITY (1,1),
	Hierarchy1Name varchar(50) NOT NULL UNIQUE
)
GO

CREATE TABLE HIERARCHY_2
(
	Id int PRIMARY KEY IDENTITY (1,1),
	Hierarchy2Name varchar(50) NOT NULL UNIQUE,
	Hierarchy1Id int NOT NULL FOREIGN KEY REFERENCES HIERARCHY_1(Id)
)
GO

CREATE TABLE VDU_GROUP
(
	Id int PRIMARY KEY IDENTITY (1,1),
	VduGroupName varchar(50) NOT NULL UNIQUE
)
GO

CREATE TABLE ALARM_GROUP
(
	Id int PRIMARY KEY IDENTITY (1,1),
	AlarmGroupName varchar(50) NOT NULL UNIQUE
)
GO

CREATE TABLE OTD
(
	Id int PRIMARY KEY IDENTITY (1,1),
	OtdName varchar(50) NOT NULL UNIQUE
)
GO

CREATE TABLE ACKNOWLEDGE_ALLOWED
(
	Id int PRIMARY KEY IDENTITY (1,1),
	AcknowledgeAllowedName varchar(200) NOT NULL UNIQUE,
)
GO

CREATE TABLE ALWAYS_VISIBLE
(
	Id int PRIMARY KEY IDENTITY (1,1),
	AlwaysVisibleName varchar(200) NOT NULL UNIQUE,
)
GO

CREATE TABLE LOCATION
(
	Id int PRIMARY KEY IDENTITY (1,1),
	LocationName varchar(200) NOT NULL UNIQUE
)
GO

CREATE TABLE NODE
(
	Id int PRIMARY KEY IDENTITY (1,1),
	NodeName varchar(50) NOT NULL UNIQUE
)
GO

CREATE TABLE CABINET
(
	Id int PRIMARY KEY IDENTITY (1,1),
	CabinetName varchar(50) NOT NULL UNIQUE
)
GO

CREATE TABLE DATA_BLOCK
(
	Id int PRIMARY KEY IDENTITY (1,1),
	DataBlockName varchar(50) NOT NULL UNIQUE
)
GO

CREATE TABLE OBJECT
(
	Id int PRIMARY KEY IDENTITY (1,1),
	SfiNumber int NOT NULL,
	MainEqNumber varchar(50) NOT NULL,
	EqNumber varchar(50),
	Description varchar(50) NOT NULL UNIQUE,
	Hierarchy1Id int NOT NULL FOREIGN KEY REFERENCES HIERARCHY_1(Id),
	Hierarchy2Id int NOT NULL FOREIGN KEY REFERENCES HIERARCHY_2(Id),
	VduGroupId int NOT NULL FOREIGN KEY REFERENCES VDU_GROUP(Id),
	AlarmGroupId int NOT NULL FOREIGN KEY REFERENCES ALARM_GROUP(Id),
	OtdId int NOT NULL FOREIGN KEY REFERENCES OTD(Id),
	AcknowledgeAllowedId int NOT NULL FOREIGN KEY REFERENCES ACKNOWLEDGE_ALLOWED(Id),
	AlwaysVisibleId int FOREIGN KEY REFERENCES ALWAYS_VISIBLE(Id),
	NodeId int NOT NULL FOREIGN KEY REFERENCES NODE(Id),
	CabinetId int NOT NULL FOREIGN KEY REFERENCES CABINET(Id),
	DataBlockId int FOREIGN KEY REFERENCES DATA_BLOCK(Id),
)
GO

CREATE TABLE TAG
(
	Id int PRIMARY KEY IDENTITY (1,1),
	Suffix int NOT NULL,
	Description varchar(50) NOT NULL,
	SignalTypeId int NOT NULL FOREIGN KEY REFERENCES SIGNAL_TYPE(Id),
	IoTypeId int NOT NULL FOREIGN KEY REFERENCES IO_TYPE(Id),
	LowLimit int,
	LowLowLimit int,
	HighLimit int,
	HighHighLimit int,
)
GO

CREATE TABLE OBJECT_TAG
(
	Id int PRIMARY KEY IDENTITY (1,1),
	TagId int FOREIGN KEY REFERENCES TAG(Id),
	ObjectId int FOREIGN KEY REFERENCES OBJECT(Id),
)
CREATE TABLE SIGNAL_TYPE
(
	Id int PRIMARY KEY IDENTITY (1,1),
	SignalTypeName varchar(50) NOT NULL UNIQUE
)
GO

CREATE TABLE IO_TYPE
(
	Id int PRIMARY KEY IDENTITY (1,1),
	IoTypeName varchar(50) NOT NULL UNIQUE
)
GO