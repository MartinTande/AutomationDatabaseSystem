@page "/databases"

@inject DatabaseManager _databaseManager
@inject NavigationManager _navigationManager

<MudContainer MaxWidth="MaxWidth.Medium">
    <h2>Databases</h2>
    <br />
    
    <div style="width:300px;">
        <h5>Select Database</h5>

        <MudSelect @bind-Value="currentDatabase" T="string" AnchorOrigin="Origin.BottomCenter" Variant="Variant.Outlined">
            @foreach (var database in databases)
            {
                <MudSelectItem Value="@database.Name" />
            }
        </MudSelect>

        <MudButton Variant="Variant.Filled" Color="Color.Primary" FullWidth="true" Disabled="@(string.IsNullOrEmpty(currentDatabase))" OnClick="@NavigateToDatabase">Go to Database</MudButton>

    </div>
    <br />
    <br />
    <div style="width:300px;">
        <h5>Create new Database</h5>

        <MudTextField @bind-Value="newDatabaseName" Immediate="true" Label="Database name" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>

        <MudButton Variant="Variant.Filled" FullWidth="true" Color="Color.Primary" Disabled="@(string.IsNullOrEmpty(newDatabaseName))" OnClick="@AddDatabase">Create New Database</MudButton>
    </div>

</MudContainer>
@code {
    private string _connectiongString = string.Empty;
    public string currentDatabase { get; set; } = string.Empty;
    string newDatabaseName = string.Empty;

    public List<Database> databases { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        databases = await _databaseManager.GetAllDatabases();

    }

    public void NavigateToDatabase()
    {
        _databaseManager.UpdateConncectionString(currentDatabase);
        _navigationManager.NavigateTo("/engineer-objects");
    }

    public async Task AddDatabase()
    {
        await _databaseManager.CreateDatabase(newDatabaseName);
    }
}
