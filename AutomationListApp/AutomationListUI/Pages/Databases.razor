@page "/databases"

@inject IConfiguration _config
@inject SqlConnectionStringBuilder sqlBuilder
@inject DatabaseManager _databaseManager

<h2>Databases</h2>
<br />

<div style="width:300px;">
    <h5>Select Database</h5>

    <MudSelect @bind-Value="currentDatabase" T="string" AnchorOrigin="Origin.BottomCenter">
        @foreach (var database in databases)
        {
            <MudSelectItem Value="@database" />
        }
    </MudSelect>

    <MudButton Variant="Variant.Filled" Color="Color.Primary" FullWidth="true" OnClick="@UpdateConnString">Go to Database</MudButton>

</div>
<br />
<br />
<div style="width:300px;">
    <h5>Create new Database</h5>

    <MudTextField @bind-Value="newDatabaseName" Label="Outlined" Variant="Variant.Outlined" Placeholder="Database name"></MudTextField>

    <MudButton Variant="Variant.Filled" FullWidth="true" Color="Color.Primary" Disabled="@(string.IsNullOrEmpty(newDatabaseName))" OnClick="@AddDatabase">Create New Database</MudButton>
</div>

@code {
    private string _connectiongString = string.Empty;
    public string currentDatabase { get; set; } = string.Empty;
    string newDatabaseName = string.Empty;

    public List<Database> databases { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        databases = await _databaseManager.GetAllDatabases();
    }

    public void UpdateConnString()
    {
        _databaseManager.UpdateConncectionString(newDatabaseName);
    }

    public async Task AddDatabase()
    {
        await _databaseManager.CreateDatabase(newDatabaseName);
    }
}
