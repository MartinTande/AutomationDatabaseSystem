@page "/object-types"

@using AutomationListLibrary.Data
@using AutomationListLibrary.Data.Categories
@using AutomationListLibrary.DataManager
@using AutomationListUI.Services

@inject ITagService _tagDB
@inject CategoryDataManager _categoryDB
@inject SubCategoryDataManager _subCategoryDB

<h1>Object Types</h1>
<hr />
<br />

<div class="card-group">
	<div class="sub-group">
		<SfGrid DataSource="objectTypes"
				@ref="@ObjectTypeGrid"
				AllowSelection="true"
				Width="300"
				EnableStickyHeader=true
				Toolbar=@ToolbarItems>
			<GridEvents RowSelected="GetSelectedObjectType" TValue="ObjectType"></GridEvents>
			<GridEditSettings AllowAdding="true"
							  AllowEditing="true"
							  AllowDeleting="true"
							  ShowConfirmDialog="false"
							  ShowDeleteConfirmDialog="true"
							  Mode="EditMode.Batch" />
			<GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Single" />
			<GridColumns>
				<GridColumn Field=@nameof(ObjectType.Name) HeaderText="Object Type" />
			</GridColumns>
		</SfGrid>
	</div>
	<div class="sub-group">
		<SfGrid DataSource="@Tags"
				@ref="@TagGrid"
				AllowReordering="true"
				AllowResizing="true"
				AllowSelection="true"
				Toolbar=@ToolbarItems>
			<GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Single" />
			<GridColumns>
				<GridColumn Field=@nameof(DisplayTagModel.EqSuffix) HeaderText="Eq Suffix" Width="100" />
				<GridColumn Field=@nameof(DisplayTagModel.Description) HeaderText="Description" Width="200"/>
				<GridColumn Field=@nameof(DisplayTagModel.IoType) HeaderText="Io Type" Width="150"/>
				<GridColumn Field=@nameof(DisplayTagModel.SignalType) HeaderText="Signal Type" Width="150"/>
			</GridColumns>
		</SfGrid>
	</div>
</div>

@code {
	SfGrid<ObjectType>? ObjectTypeGrid;
	SfGrid<DisplayTagModel>? TagGrid;
	List<DisplayTagModel>? Tags;
	List<ObjectType>? objectTypes;
	public ObjectType? SelectedObjectType { get; set; }
	public string[] ToolbarItems = new string[] { "Add", "Edit", "Delete", "Update", "Cancel" };

	protected override async Task OnInitializedAsync()
	{
		objectTypes = await _categoryDB.GetObjectTypeCategory();
	}

	public async Task GetSelectedObjectType(RowSelectEventArgs<ObjectType> args)
	{
		SelectedObjectType = (await this.ObjectTypeGrid.GetSelectedRecordsAsync()).FirstOrDefault();

		Tags = await _tagDB.GetTagsByObjectTypeAsync(SelectedObjectType.Name);
		
	}

	public async Task SubPictureToolbarClickHandler(Syncfusion.Blazor.Navigations.ClickEventArgs args)
	{
		if (args.Item.Text == "Update")
		{
			var objectTypesChanges = await this.ObjectTypeGrid.GetBatchChangesAsync();

			if (objectTypesChanges.ChangedRecords.Count > 0)
			{
				foreach (var objectType in objectTypesChanges.ChangedRecords)
				{
				}
			}
			if (objectTypesChanges.DeletedRecords.Count > 0)
			{
				foreach (var objectType in objectTypesChanges.DeletedRecords)
				{
					await _subCategoryDB.DeleteHierarchy2CategoryAsync(objectType.Id);
				}
			}
			if (objectTypesChanges.AddedRecords.Count > 0)
			{
				foreach (var subPicture in objectTypesChanges.AddedRecords)
				{
				}
			}

		}

		if (args.Item.Text == "Delete")
		{
		}
	}
}


<style>
    .card-group {
        min-height: 600px;
        margin: 20px;
        float: left;
    }

	.sub-group {
		margin: 10px;
		max-width: 700px;
	}

	.e-grid .e-toolbar .e-tbar-btn-text,
	.e-grid .e-toolbar .e-toolbar-items .e-toolbar-item .e-tbar-btn-text {
		display: none;
	}

</style>